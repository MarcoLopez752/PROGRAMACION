// clasesVector.cpp : Defines the entry point for the console application.
//
#include "stdafx.h"
#include "vector.h"
#include <iostream>
#include <string>

using namespace std;

int main(void)
{
	Vector a,b,c;

	int opcion;
	int pos;
	string valor;
	do
	{
		cout << "1: Llennar Todo "<< endl;
		cout << "2: Borrar todo"<< endl;
		cout << "3: Insertar Uno"<< endl;
		cout << "4: Eliminar Uno"<< endl;
		cout << "5: Mostrar"<< endl;
		cout << "0: Salir"<< endl;
		cin>>opcion;
		switch(opcion)
		{
		case 1:
			{
				a.leer("A");
				break;
			}
		case 2:
			{
	/*			if(a.eliminar()!=true)
				{
					cout <<" vector lleno"<< endl;
				}*/
				break;
			}
		case 3:
			{
				cout<<"de la Posicion : ";
				cin>> pos;
				if(a.eliminar(pos,valor)!=true)
				{
					cout << "vector vacio o posicion mala"<<endl;
				}
				else
				{
					cout << "El valor eliminado es :" << valor;
				}
				break;
			}
			
		}
	}while ((opcion != 0)&& (opcion <6));
	return 0;
}

//clase//


#pragma once
#include "stdafx.h"
#include <iostream>
#include <string>
using namespace std;
const int n=20;

class Vector
{
	string vector[n];
	int tamano;
public:
	//Metodos de acceso
	string get_vector(int p)
	{
		return vector[p];
	}
	string set_vector(int p, string s)
	{
		vector[p] = s;
	}
	int get_tamano()
	{
		return tamano;
	}
	void set_tamano(int t)
	{
		tamano = t;
	}
	bool vacio()
	{
		if (tamano == 0)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	bool lleno()
	{
		if (tamano == n)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	bool insertar(int p, string s)
	{
		if (lleno())
		{
			return false;
		}
		if (p<0 || p>tamano)
		{
			return false;
		}
		else
		{
			int i = tamano;
			while (i > p)
			{
				vector[i] = vector[i - 1];
				i--;
			}
			vector[p] = 5;
			tamano++;
			return true;
		}
	}
	bool eliminar(int p, string &x) //Devuelve el valor al main
	{
		if (vacio())
		{
			return false;
		}

		if (p > 0 || p >= tamano) 
		{ 
			return false; 
		}
		else 
		{
			int i = p;
			x = vector[p];
			while (i < tamano)
			{
				vector[i] = vector[i + 1];
				i++;
			}
			tamano--;
			return true;
		}
	}

	void leer(string letra)
	{
		int tam;
			cout << "el tamaÃ±o es";
			cin >> tam;
			for (int i=0; i<tam; i++)
			{
				cout <<"Vector "<<letra<<"] :";
				cin >> vector[i];
			}

	}

	void Mostar(string letra)
	{
		int i=0;
		cout << endl;
		while (i<tamano)
		{
			cout<<"Vector "<<letra<<"["<<i<<"]: "<< vector[i]<<endl;
		}
	
	}
};
